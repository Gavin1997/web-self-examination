(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{368:function(t,a,s){"use strict";s.r(a);var r=s(42),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),s("h2",{attrs:{id:"_1-可计算一个算法的时间复杂度和空间复杂度-可估计业务逻辑代码的耗时和内存消耗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-可计算一个算法的时间复杂度和空间复杂度-可估计业务逻辑代码的耗时和内存消耗"}},[t._v("#")]),t._v(" 1. 可计算一个算法的时间复杂度和空间复杂度，可估计业务逻辑代码的耗时和内存消耗")]),t._v(" "),s("h2",{attrs:{id:"_2-至少理解五种排序算法的实现原理、应用场景、优缺点-可快速说出时间、空间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-至少理解五种排序算法的实现原理、应用场景、优缺点-可快速说出时间、空间复杂度"}},[t._v("#")]),t._v(" 2. 至少理解五种排序算法的实现原理、应用场景、优缺点，可快速说出时间、空间复杂度")]),t._v(" "),s("h2",{attrs:{id:"_3-了解递归和循环的优缺点、应用场景、并可在开发中熟练应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-了解递归和循环的优缺点、应用场景、并可在开发中熟练应用"}},[t._v("#")]),t._v(" 3. 了解递归和循环的优缺点、应用场景、并可在开发中熟练应用")]),t._v(" "),s("h2",{attrs:{id:"_4-可应用回溯算法、贪心算法、分治算法、动态规划等解决复杂问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-可应用回溯算法、贪心算法、分治算法、动态规划等解决复杂问题"}},[t._v("#")]),t._v(" 4. 可应用回溯算法、贪心算法、分治算法、动态规划等解决复杂问题")]),t._v(" "),s("h2",{attrs:{id:"_5-前端处理海量数据的算法方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-前端处理海量数据的算法方案"}},[t._v("#")]),t._v(" 5. 前端处理海量数据的算法方案")])])}),[],!1,null,null,null);a.default=e.exports}}]);
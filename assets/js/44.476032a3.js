(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{399:function(a,t,s){"use strict";s.r(t);var r=s(42),_=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"浏览器原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器原理"}},[a._v("#")]),a._v(" 浏览器原理")]),a._v(" "),s("h2",{attrs:{id:"_1-各浏览器使用的-javascript-引擎以及它们的异同点、如何在代码中进行区分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-各浏览器使用的-javascript-引擎以及它们的异同点、如何在代码中进行区分"}},[a._v("#")]),a._v(" 1. 各浏览器使用的 JavaScript 引擎以及它们的异同点、如何在代码中进行区分")]),a._v(" "),s("h2",{attrs:{id:"_2-请求数据到请求结束与服务器进行了几次交互"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-请求数据到请求结束与服务器进行了几次交互"}},[a._v("#")]),a._v(" 2. 请求数据到请求结束与服务器进行了几次交互")]),a._v(" "),s("h2",{attrs:{id:"_3-可详细描述浏览器从输入-url-到页面展现的详细过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-可详细描述浏览器从输入-url-到页面展现的详细过程"}},[a._v("#")]),a._v(" 3. 可详细描述浏览器从输入 URL 到页面展现的详细过程")]),a._v(" "),s("h2",{attrs:{id:"_4-浏览器解析-html-代码的原理-以及构建-dom-树的流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-浏览器解析-html-代码的原理-以及构建-dom-树的流程"}},[a._v("#")]),a._v(" 4. 浏览器解析 HTML 代码的原理，以及构建 DOM 树的流程")]),a._v(" "),s("h2",{attrs:{id:"_5-浏览器如何解析-css-规则-并将其应用到-dom-树上"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-浏览器如何解析-css-规则-并将其应用到-dom-树上"}},[a._v("#")]),a._v(" 5. 浏览器如何解析 CSS 规则，并将其应用到 DOM 树上")]),a._v(" "),s("h2",{attrs:{id:"_6-浏览器如何将解析好的带有样式的-dom-树进行绘制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-浏览器如何将解析好的带有样式的-dom-树进行绘制"}},[a._v("#")]),a._v(" 6. 浏览器如何将解析好的带有样式的 DOM 树进行绘制")]),a._v(" "),s("h2",{attrs:{id:"_7-浏览器的运行机制-如何配置资源异步同步加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-浏览器的运行机制-如何配置资源异步同步加载"}},[a._v("#")]),a._v(" 7. 浏览器的运行机制，如何配置资源异步同步加载")]),a._v(" "),s("h2",{attrs:{id:"_8-浏览器回流与重绘的底层原理-引发原因-如何有效避免"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-浏览器回流与重绘的底层原理-引发原因-如何有效避免"}},[a._v("#")]),a._v(" 8. 浏览器回流与重绘的底层原理，引发原因，如何有效避免")]),a._v(" "),s("h2",{attrs:{id:"_9-浏览器的垃圾回收机制-如何避免内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-浏览器的垃圾回收机制-如何避免内存泄漏"}},[a._v("#")]),a._v(" 9. 浏览器的垃圾回收机制，如何避免内存泄漏")]),a._v(" "),s("h2",{attrs:{id:"_10-浏览器采用的缓存方案-如何选择和控制合适的缓存方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-浏览器采用的缓存方案-如何选择和控制合适的缓存方案"}},[a._v("#")]),a._v(" 10. 浏览器采用的缓存方案，如何选择和控制合适的缓存方案")])])}),[],!1,null,null,null);t.default=_.exports}}]);
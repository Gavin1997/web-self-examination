(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{298:function(a,t,r){"use strict";r.r(t);var e=r(38),s=Object(e.a)({},function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法","aria-hidden":"true"}},[a._v("#")]),a._v(" 算法")]),a._v(" "),r("h2",{attrs:{id:"_1-可计算一个算法的时间复杂度和空间复杂度，可估计业务逻辑代码的耗时和内存消耗"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-可计算一个算法的时间复杂度和空间复杂度，可估计业务逻辑代码的耗时和内存消耗","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 可计算一个算法的时间复杂度和空间复杂度，可估计业务逻辑代码的耗时和内存消耗")]),a._v(" "),r("h2",{attrs:{id:"_2-至少理解五种排序算法的实现原理、应用场景、优缺点，可快速说出时间、空间复杂度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-至少理解五种排序算法的实现原理、应用场景、优缺点，可快速说出时间、空间复杂度","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 至少理解五种排序算法的实现原理、应用场景、优缺点，可快速说出时间、空间复杂度")]),a._v(" "),r("h2",{attrs:{id:"_3-了解递归和循环的优缺点、应用场景、并可在开发中熟练应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-了解递归和循环的优缺点、应用场景、并可在开发中熟练应用","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. 了解递归和循环的优缺点、应用场景、并可在开发中熟练应用")]),a._v(" "),r("h2",{attrs:{id:"_4-可应用回溯算法、贪心算法、分治算法、动态规划等解决复杂问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-可应用回溯算法、贪心算法、分治算法、动态规划等解决复杂问题","aria-hidden":"true"}},[a._v("#")]),a._v(" 4. 可应用回溯算法、贪心算法、分治算法、动态规划等解决复杂问题")]),a._v(" "),r("h2",{attrs:{id:"_5-前端处理海量数据的算法方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-前端处理海量数据的算法方案","aria-hidden":"true"}},[a._v("#")]),a._v(" 5. 前端处理海量数据的算法方案")])])},[],!1,null,null,null);t.default=s.exports}}]);
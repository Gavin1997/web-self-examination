(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{275:function(a,t,e){"use strict";e.r(t);var r=e(38),s=Object(r.a)({},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"数据流管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据流管理","aria-hidden":"true"}},[a._v("#")]),a._v(" 数据流管理")]),a._v(" "),e("h2",{attrs:{id:"_1-掌握-react-和-vue-传统的跨组件通信方案，对比采用数据流管理框架的异同"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-掌握-react-和-vue-传统的跨组件通信方案，对比采用数据流管理框架的异同","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 掌握 React 和 Vue 传统的跨组件通信方案，对比采用数据流管理框架的异同")]),a._v(" "),e("h2",{attrs:{id:"_2-熟练使用-redux-管理数据流，并理解其实现原理，中间件实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-熟练使用-redux-管理数据流，并理解其实现原理，中间件实现原理","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 熟练使用 Redux 管理数据流，并理解其实现原理，中间件实现原理")]),a._v(" "),e("h2",{attrs:{id:"_3-熟练使用-mobx-管理数据流，并理解其实现原理，相比-redux-有什么优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-熟练使用-mobx-管理数据流，并理解其实现原理，相比-redux-有什么优势","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. 熟练使用 Mobx 管理数据流，并理解其实现原理，相比 Redux 有什么优势")]),a._v(" "),e("h2",{attrs:{id:"_4-熟练使用-vuex-管理数据流，并理解其实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-熟练使用-vuex-管理数据流，并理解其实现原理","aria-hidden":"true"}},[a._v("#")]),a._v(" 4. 熟练使用 Vuex 管理数据流，并理解其实现原理")]),a._v(" "),e("h2",{attrs:{id:"_5-以上数据流方案的异同和优缺点，不情况下的技术选型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-以上数据流方案的异同和优缺点，不情况下的技术选型","aria-hidden":"true"}},[a._v("#")]),a._v(" 5. 以上数据流方案的异同和优缺点，不情况下的技术选型")])])},[],!1,null,null,null);t.default=s.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{269:function(t,a,r){"use strict";r.r(a);var e=r(38),s=Object(e.a)({},function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"执行机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#执行机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 执行机制")]),t._v(" "),r("h2",{attrs:{id:"为何-try-里面放-return，finally-还会执行，理解其内部机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为何-try-里面放-return，finally-还会执行，理解其内部机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 为何 try 里面放 return，finally 还会执行，理解其内部机制")]),t._v(" "),r("h2",{attrs:{id:"javascript-如何实现异步编程，可以详细描述-eventloop-机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript-如何实现异步编程，可以详细描述-eventloop-机制","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript 如何实现异步编程，可以详细描述 EventLoop 机制")]),t._v(" "),r("h2",{attrs:{id:"宏任务和微任务分别有哪些"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#宏任务和微任务分别有哪些","aria-hidden":"true"}},[t._v("#")]),t._v(" 宏任务和微任务分别有哪些")]),t._v(" "),r("h2",{attrs:{id:"可以快速分析一个复杂的异步嵌套逻辑，并掌握分析方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#可以快速分析一个复杂的异步嵌套逻辑，并掌握分析方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 可以快速分析一个复杂的异步嵌套逻辑，并掌握分析方法")]),t._v(" "),r("h2",{attrs:{id:"使用-promise-实现串行"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用-promise-实现串行","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 Promise 实现串行")]),t._v(" "),r("h2",{attrs:{id:"node-与浏览器-eventloop-的差异"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#node-与浏览器-eventloop-的差异","aria-hidden":"true"}},[t._v("#")]),t._v(" Node 与浏览器 EventLoop 的差异")]),t._v(" "),r("h2",{attrs:{id:"如何在保证页面运行流畅的情况下处理海量数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何在保证页面运行流畅的情况下处理海量数据","aria-hidden":"true"}},[t._v("#")]),t._v(" 如何在保证页面运行流畅的情况下处理海量数据")])])},[],!1,null,null,null);a.default=s.exports}}]);
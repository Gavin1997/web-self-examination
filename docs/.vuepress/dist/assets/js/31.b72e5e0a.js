(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{278:function(a,t,r){"use strict";r.r(t);var e=r(38),s=Object(e.a)({},function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"浏览器-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浏览器-api","aria-hidden":"true"}},[a._v("#")]),a._v(" 浏览器 API")]),a._v(" "),r("h2",{attrs:{id:"_1-浏览器提供的符合-w3c-标准的-dom-操作-api、浏览器差异、兼容性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-浏览器提供的符合-w3c-标准的-dom-操作-api、浏览器差异、兼容性","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 浏览器提供的符合 W3C 标准的 DOM 操作 API、浏览器差异、兼容性")]),a._v(" "),r("h2",{attrs:{id:"_2-浏览器提供的浏览器对象模型-bom-提供的所有全局-api、浏览器差异、兼容性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-浏览器提供的浏览器对象模型-bom-提供的所有全局-api、浏览器差异、兼容性","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 浏览器提供的浏览器对象模型 (BOM)提供的所有全局 API、浏览器差异、兼容性")]),a._v(" "),r("h2",{attrs:{id:"_3-大量-dom-操作、海量数据的性能优化-合并操作、diff、requestanimationframe-等"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-大量-dom-操作、海量数据的性能优化-合并操作、diff、requestanimationframe-等","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. 大量 DOM 操作、海量数据的性能优化(合并操作、Diff、requestAnimationFrame 等)")]),a._v(" "),r("h2",{attrs:{id:"_4-浏览器海量数据存储、操作性能优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-浏览器海量数据存储、操作性能优化","aria-hidden":"true"}},[a._v("#")]),a._v(" 4. 浏览器海量数据存储、操作性能优化")]),a._v(" "),r("h2",{attrs:{id:"_5-dom-事件流的具体实现机制、不同浏览器的差异、事件代理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-dom-事件流的具体实现机制、不同浏览器的差异、事件代理","aria-hidden":"true"}},[a._v("#")]),a._v(" 5. DOM 事件流的具体实现机制、不同浏览器的差异、事件代理")]),a._v(" "),r("h2",{attrs:{id:"_6-前端发起网络请求的几种方式及其底层实现、可以手写原生-ajax、fetch、可以熟练使用第三方库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-前端发起网络请求的几种方式及其底层实现、可以手写原生-ajax、fetch、可以熟练使用第三方库","aria-hidden":"true"}},[a._v("#")]),a._v(" 6. 前端发起网络请求的几种方式及其底层实现、可以手写原生 ajax、fetch、可以熟练使用第三方库")]),a._v(" "),r("h2",{attrs:{id:"_7-浏览器的同源策略，如何避免同源策略，几种方式的异同点以及如何选型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-浏览器的同源策略，如何避免同源策略，几种方式的异同点以及如何选型","aria-hidden":"true"}},[a._v("#")]),a._v(" 7. 浏览器的同源策略，如何避免同源策略，几种方式的异同点以及如何选型")]),a._v(" "),r("h2",{attrs:{id:"_8-浏览器提供的几种存储机制、优缺点、开发中正确的选择"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-浏览器提供的几种存储机制、优缺点、开发中正确的选择","aria-hidden":"true"}},[a._v("#")]),a._v(" 8. 浏览器提供的几种存储机制、优缺点、开发中正确的选择")]),a._v(" "),r("h2",{attrs:{id:"_9-浏览器跨标签通信"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-浏览器跨标签通信","aria-hidden":"true"}},[a._v("#")]),a._v(" 9. 浏览器跨标签通信")])])},[],!1,null,null,null);t.default=s.exports}}]);